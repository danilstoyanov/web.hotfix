{"version":3,"sources":["panels/Home.js","panels/Place.js","panels/Checkbox.js","panels/Basket.js","panels/Order.js","panels/Orders.js","App.js","index.js","img/edit.svg","img/1.png","img/3.png","img/2.png","img/4.png","img/check-symbol.svg","img/refresh-button.svg","img/kfc.png","img/burger.png","img/mcdac.png","img/sub.png"],"names":["Home","foodAreas","order","Fragment","className","map","area","key","id","to","name","alt","src","edit","items","item","link","image","description","Object","keys","length","defaultProps","Place","onIncrementPosition","onDecrementPosition","placeFoodIds","useMemo","values","foods","price","foodIds","Set","result","filter","value","has","reduce","count","parseInt","accounting","formatNumber","orderValues","isOrderPossible","some","orderItem","includes","food","composition","onClick","itemId","areaId","href","event","preventDefault","Checkbox","checked","onToggle","onChange","type","Check","withRouter","match","params","isObjectEmpty","obj","cachedBasketState","JSON","parse","localStorage","getItem","defaultFaster","time","defaultTime","defaultSelfService","selfService","useState","faster","setFaster","setTime","setSelfService","products","setItem","stringify","onFocus","target","onBlur","removeItem","Order","history","setActiveOrder","setTimeout","push","Orders","orderStatuses","setCanceledOrder","setFinishedOrder","activeOrders","activeOrdersList","shopId","activeOrdersSet","forEach","data","placeId","placeName","shopName","finishedOrders","refresh","FOOD_AREAS","kfc","FourTowar","OneTowar","burger","TwoTowar","ThreeTowar","mcdac","sub","placesMap","foodsMap","App","setOrderStatuses","setOrder","path","exact","nextStatuses","render","routeProps","place","placeFood","find","placeFoodValues","console","log","location","pathname","updatedOrder","nextOrderStatuses","status","serialized","connect","send","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9f305b27.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './Home.css';\n\nconst Home = ({ foodAreas, order }) => (\n  <React.Fragment>\n    <ul className=\"Home\">\n      {foodAreas.map((area) => (\n        <li\n          key={area.id}\n        >\n          <div className=\"Home__fixed-content\">\n            <header className=\"Home__header\">\n              <h1 className=\"Home__head\">\n                <Link to=\"/\" className=\"Home__logo\">\n                  {area.name}\n                </Link>\n              </h1>\n              <Link to=\"/\" className=\"Home__change-tz\">\n                <img\n                  className=\"Home__edit\"\n                  alt=\"change-profile\"\n                  src={edit}\n                />\n              </Link>\n            </header>\n            <ul className=\"Home__tabs\">\n              <li className=\"Home__tab Home__tab_active\">\n                Еда\n              </li>\n              {/* <li className=\"Home__tab Home__tab_disabled\">\n                Развлечения\n              </li>\n              <li className=\"Home__tab Home__tab_disabled\">\n                Здоровье\n              </li> */}\n            </ul>\n          </div>\n          <ul className=\"Home__items\">\n            {area.items.map(item => (\n              <li\n                className=\"Home__item\"\n                key={item.id}\n              >\n                <Link\n                  className=\"Home__food-link\"\n                  to={item.link}\n                >\n                  <img\n                    alt={item.name}\n                    className=\"Home__image\"\n                    src={item.image}\n                  />\n                  <h3 className=\"Home__food-name\">\n                    {item.name}\n                  </h3>\n                  <p className=\"Home__food-type\">{item.description}</p>\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n      ))}\n    </ul>\n    {Object.keys(order).length !== 0 && (\n      <footer className=\"Footer\">\n        <Link to=\"/orders\" className=\"Footer__orders\">\n\t\t\t\t\tМои заказы\n        </Link>\n      </footer>\n    )}\n  </React.Fragment>\n);\n\nHome.propTypes = {\n  foodAreas: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    items: PropTypes.arrayOf(PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      description: PropTypes.string,\n      url: PropTypes.string,\n    })),\n  })),\n};\n\nHome.defaultProps = {\n  foodAreas: [],\n};\n\nexport default Home;\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\nimport accounting from 'accounting';\n// import PropTypes from 'prop-types';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Place = ({ item, order, onIncrementPosition, onDecrementPosition, area }) => {\n  const placeFoodIds = useMemo(() => {\n    if(Object.values(item).length === 0) {\n      return []\n    }\n\n    return item.foods.map(item => item.id)\n  }, [item]);\n\n  const price = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const result = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      })\n      .reduce((result, value) => {\n        const { count, item: { price }} = value;\n\n        return result + parseInt(price) * parseInt(count);\n      }, 0);\n\n    return accounting.formatNumber(result, 0, ' ');\n  }, [ order, item ]);\n\n  const orderValues = Object.values(order);\n  const isOrderPossible = orderValues.length > 0 && orderValues.some(orderItem => placeFoodIds.includes(orderItem.item.id))\n\n  return (\n    <div className=\"Place\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n          <img\n            alt=\"change-profile\"\n            src={edit}\n          />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <ul className=\"Place__foods\">\n        {item.foods.map((food => (\n          <li\n            className=\"Place__food\"\n            key={food.id}\n          >\n            <div className=\"Place__food-logo-wrapper\">\n              <img\n                alt=\"food logo\"\n                className=\"Place__food-logo\"\n                src={food.image}\n              />\n            </div>\n            <h3 className=\"Place__food-name\">\n              {food.name}\n            </h3>\n            <p className=\"Place__food-composition\">\n              {food.composition}\n            </p>\n            <div className=\"Place__food-price\">\n              <span className=\".Place__food-price-price\">Цена: {food.price}&nbsp;&nbsp;</span>\n              <button\n                className=\"Place__food-button\"\n                onClick={() => {\n                  onDecrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                }}\n              >\n                -\n              </button>\n              <span>&nbsp;{food.id in order ? order[food.id].count : 0}&nbsp;</span>\n              <button\n                className=\"Place__food-button\"\n                onClick={() => {\n                  onIncrementPosition({ id: food.id, itemId: item.id, areaId: area.id });\n                }}\n              >\n                +\n              </button>\n            </div>\n          </li>\n        )))}\n      </ul>\n      <footer className=\"Place__footer\">\n        {isOrderPossible ? (\n          <Link to={`/basket/${area.id}/${item.id}`} className=\"Place__order\">\n            Оформить заказ ({price})\n          </Link>\n        ) : (\n          <a\n            href=\"#\"\n            onClick={(event) => event.preventDefault()}\n            className=\"Place__order\"\n          >\n            Оформить заказ ({price})\n          </a>\n        )}\n      </footer>\n    </div>\n  );\n};\n\nPlace.defaultProps = {\n  item: {},\n  onIncrementPosition: () => {},\n  onDecrementPosition: () => {},\n};\n\nexport default Place;\n","import React from 'react';\n\nimport './Checkbox.css';\nimport Check from '../img/check-symbol.svg';\n\n\nconst Checkbox = ({ checked, onToggle }) => {\n  return (\n    <div className=\"Checkbox\">\n      <input\n        checked={checked}\n        onChange={onToggle}\n        type=\"checkbox\"\n      />\n      <img\n        alt=\"custom checkbox logo\"\n        src={Check}\n      />\n    </div>\n  );\n};\n\nCheckbox.defaultProps = {\n  onToggle: () => {},\n};\n\nexport default Checkbox;\n","import React, { useMemo, useState } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport accounting from 'accounting';\n\nimport Checkbox from './Checkbox';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Basket = ({ match: { params: { areaId, itemId }}, foodAreas, order }) => {\n  const isObjectEmpty = (obj) => Object.keys(obj).length === 0\n  const cachedBasketState = JSON.parse(\n    localStorage.getItem('basketState')\n      ? localStorage.getItem('basketState')\n      : \"{}\"\n  )\n\n  const defaultFaster = (!isObjectEmpty(cachedBasketState) && cachedBasketState.time === '') || false;\n  const defaultTime = (!isObjectEmpty(cachedBasketState) && cachedBasketState.time) || '';\n  const defaultSelfService = (!isObjectEmpty(cachedBasketState) && cachedBasketState.selfService) || false;\n\n  const [ faster, setFaster ] = useState(defaultFaster);\n  const [ time, setTime ] = useState(defaultTime);\n  const [ selfService, setSelfService ] = useState(defaultSelfService);\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  const [ price, products ] = useMemo(() => {\n    const foodIds = new Set((item.foods || []).map(item => item.id));\n\n    const products = Object.values(order)\n      .filter((value) => {\n        const { item: { id }} = value;\n\n        return foodIds.has(id);\n      });\n\n    const result = products.reduce((result, value) => {\n        const { count, item } = value;\n\n        return result + parseInt(item.price) * parseInt(count);\n      }, 0);\n\n    return [ accounting.formatNumber(result, 0, ' '), products ];\n  }, [ order, item ]);\n\n  const onEditToggled = () => {\n    localStorage.setItem('basketState', JSON.stringify({\n      faster,\n      selfService,\n      time: time || '',\n    }))\n  }\n\n  const resetBasketState = () => {\n    localStorage.removeItem('basketState')\n  }\n\n  return (\n    <div className=\"Place\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__products-wrapper\">\n        <ul className=\"Place__products\">\n          {products.map(({ item, count }) => (\n            <li\n              className=\"Place__product\"\n              key={item.id}\n            >\n              <img\n                className=\"Place__product-logo\"\n                alt=\"Ordered product logo\"\n                src={item.image}\n              />\n              <h3\n                className=\"Place__product-name\"\n              >\n                {item.name}\n              </h3>\n              <p\n                className=\"Place__product-price\"\n              >\n                Цена: {item.price}\n              </p>\n              <p\n                className=\"Place__product-count\"\n              >\n                x{count}\n              </p>\n            </li>\n          ))}\n        </ul>\n        <Link\n          className=\"Place__change-product\"\n          to={`/place/${areaId}/${itemId}`}\n          onClick={onEditToggled}\n        >\n          Изменить\n        </Link>\n      </div>\n      <div className=\"Place__choice\">\n        <h3>Время:</h3>\n        <div className=\"Place__choice-item\">\n          <span>Как можно быстрее</span>\n          <Checkbox \n            checked={faster} \n            onToggle={() => {\n              if (faster) {\n                setFaster(false);\n              } else {\n                setTime('');\n                setFaster(true);\n              }\n            }}\n          />\n        </div>\n        <div className=\"Place__choice-item\">\n          <span>Назначить</span>\n            <input\n              type=\"time\"\n              value={time}\n              onFocus={() => {\n                setFaster(false);\n              }}\n              onChange={event => {\n                setFaster(false);\n                setTime(event.target.value);\n              }}\n              onBlur={() => {\n                if (time) {\n                  setFaster(false);\n                }\n              }}\n            />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>С собой</h3>\n          <Checkbox checked={selfService} onToggle={() => setSelfService(!selfService)} />\n        </div>\n        <div className=\"Place__choice-item\">\n          <h3>На месте</h3>\n          <Checkbox checked={!selfService} onToggle={() => setSelfService(!setSelfService)} />\n        </div>\n      </div>\n      <footer className=\"Place__footer\">\n        <Link\n          onClick={resetBasketState}\n          to={`/order/${area.id}/${item.id}`}\n          className=\"Place__order\"\n        >\n          Оплатить {price}\n        </Link>\n      </footer>\n    </div>\n  );\n};\n\nexport default withRouter(Basket);\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport edit from '../img/edit.svg';\nimport './place.css';\n\n\nconst Order = ({ match: { params: { areaId, itemId }}, history, foodAreas, setActiveOrder }) => {\n  const area = foodAreas.filter(area => area.id === areaId)[0];\n  const item = area.items.filter(item => item.id === itemId)[0];\n\n  return (\n    <div className=\"Place Place_order\">\n      <header className=\"Place__header\">\n        <aside className=\"Place__trz\">\n          <h1 className=\"Place__head\">\n            <Link to=\"/\" className=\"Place__logo\">\n              {area.name}\n            </Link>\n          </h1>\n          <Link to=\"/edit\" className=\"Place__change-tz\">\n            <img\n              alt=\"change-profile\"\n              src={edit}\n            />\n          </Link>\n        </aside>\n      </header>\n      <aside className=\"Place__restoraunt\">\n        <img\n          className=\"Place__restoraunt-logo\"\n          alt=\"Fastfood logo\"\n          src={item.image}\n        />\n        <h2\n          className=\"Place__restoraunt-name\"\n        >\n          {item.name}\n        </h2>\n        <p className=\"Place__restoraunt-type\">\n          {item.description}\n        </p>\n      </aside>\n      <div className=\"Place__order-body\">\n        <h3 className=\"Place__order-number-header\">\n          Номер вашего заказа\n        </h3>\n        <main className=\"Place__order-number\">\n          7\n        </main>\n        <p className=\"Place__order-number-header\">\n          Заказ будет готов через\n        </p>\n        <h3 className=\"Place__order-time\">\n          ~ 15 минут\n        </h3>\n      </div>\n      <footer className=\"Place__footer\">\n        <div \n          to=\"/orders\" \n          className=\"Place__order\"\n          onClick={() => {\n            setActiveOrder({ itemId });\n\n            setTimeout(() => {\n              history.push('/orders');\n            }, 0);\n          }}\n        >\n          Мои заказы\n        </div>\n      </footer>\n    </div>\n  );\n};\n\nOrder.defaultProps = {\n  setActiveOrder: () => {},\n};\n\nexport default withRouter(Order);\n","import React, { useMemo } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport refresh from '../img/refresh-button.svg';\nimport './orders.css';\n\n\nconst Orders = ({ order, orderStatuses, foodAreas, setFinishedOrder, setCanceledOrder, setActiveOrder }) => {\n  const activeOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] === 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeId: area.id,\n            placeName: area.name,\n            shopId: item.id,\n            shopName: item.name,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  const finishedOrders = useMemo(() => {\n    const activeOrdersList = Object.keys(orderStatuses)\n      .filter(shopId => orderStatuses[shopId] !== 'ACTIVE')\n      .map(shopId => shopId);\n\n    const result = [];\n    const activeOrdersSet = new Set(activeOrdersList);\n\n    foodAreas.forEach((area) => {\n      area.items.forEach(item => {\n        if (activeOrdersSet.has(item.id)) {\n          const data = {\n            placeName: area.name,\n            shopName: item.name,\n            shopId: item.id,\n            price: item.foods.reduce((result, food) => {\n              if (food.id in order) {\n                const { item: { price }, count } = order[food.id];\n\n                return result + parseInt(price) * parseInt(count);\n              }\n\n              return result;\n            }, 0),\n            link: `/order/${area.id}/${item.id}`,\n          };\n\n          result.push(data);\n        }\n      });\n    });\n\n    return result;\n  }, [ order, orderStatuses, foodAreas ]);\n\n  return (\n    <div className=\"Orders\">\n      <ul className=\"Orders__active-orders\">\n        {activeOrders.map(order => (\n          <li\n            className=\"Orders__active-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name\">{order.shopName}</p>\n              <p className=\"Orders__price\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <div className=\"Orders__time\">\n              ~ 15 М\n            </div>\n            <Link\n              className=\"Orders__change\"\n              to={`/place/${order.placeId}/${order.shopId}`}\n            >\n              Изм\n            </Link>\n            <button\n              className=\"Orders__cancel\"\n              onClick={() => {\n                setCanceledOrder({ itemId: order.shopId })\n              }}\n            >\n              Отм.\n            </button>\n          </li>\n        ))}\n      </ul>\n      <ul className=\"Orders__finished-orders\">\n        {finishedOrders.map(order => (\n          <li\n            className=\"Orders__finished-order\"\n            key={order.link}\n          >\n            <div className=\"Orders__left\">\n              <h3 className=\"Orders__header Orders__dark\">{order.placeName}</h3>\n              <p className=\"Orders__shop-name Orders__pink\">{order.shopName}</p>\n              <p className=\"Orders__price Orders__pink\">Сумма {order.price} - Оплачено</p>\n            </div>\n            <button\n              className=\"Orders__repeat\"\n              onClick={() => {\n                setActiveOrder({ itemId: order.shopId });\n              }}\n            >\n              <img\n                className=\"Orders__refresh\"\n                alt=\"repeat order\"\n                src={refresh}\n              />\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nOrders.defaultProps = {\n  setFinishedOrder: () => {},\n  setActiveOrder: () => {},\n  setCanceledOrder: () => {},\n};\n\nexport default Orders;\n","import React, { useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './panels/Home';\nimport Place from './panels/Place';\nimport Basket from './panels/Basket';\nimport Order from './panels/Order';\nimport Orders from './panels/Orders';\n\nimport './panels/App.css';\nimport kfc from './img/kfc.png';\nimport burger from './img/burger.png';\nimport mcdac from './img/mcdac.png';\nimport sub from './img/sub.png';\nimport OneTowar from './img/1.png';\nimport TwoTowar from './img/2.png';\nimport ThreeTowar from './img/3.png';\nimport FourTowar from './img/4.png';\n\n\nconst FOOD_AREAS = [{\n\tid: 'pizikiva-gallery',\n\tname: 'ТРЦ \"Им.Пыжикова\"',\n\titems: [{\n\t\tid: 'kfc',\n\t\tname: 'KFC',\n\t\tlink: '/place/pizikiva-gallery/kfc',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: kfc,\n\t\tfoods: [{\n\t\t\tid: 'classic',\n\t\t\timage: FourTowar,\n\t\t\tname: 'Классик',\n\t\t\tprice: 150,\n\t\t}, {\n\t\t\tid: 'fries',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Картофель фри',\n\t\t\tprice: 50,\n\t\t}],\n\t}, {\n\t\tid: 'burger-king',\n\t\tname: 'Burger King',\n\t\tlink: '/place/pizikiva-gallery/burger-king',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: burger,\n\t\tfoods: [{\n\t\t\tid: 'OneTowar',\n\t\t\tname: 'Товар № 1',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 630,\n\t\t\timage: OneTowar,\n\t\t}, {\n\t\t\tid: 'TwoTowar',\n\t\t\tname: 'Товар № 2',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 450,\n\t\t\timage: TwoTowar,\n\t\t}, {\n\t\t\tid: 'ThreeTowar',\n\t\t\tname: 'Товар № 3',\n\t\t\tcomposition: 'Состав: по ГОСТу',\n\t\t\tprice: 800,\n\t\t\timage: ThreeTowar,\n\t\t}, {\n\t\t\tid: 'FourthTowar',\n\t\t\tname: 'Товар № 4',\n\t\t\tcomposition: 'Состав по ГОСТу',\n\t\t\tprice: 600,\n\t\t\timage: FourTowar,\n\t\t}],\n\t}, {\n\t\tid: 'macdac',\n\t\tname: 'McDonal\\'s',\n\t\tlink: '/place/pizikiva-gallery/macdac',\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\timage: mcdac,\n\t\tfoods: [{\n\t\t\tid: 'hamburger',\n\t\t\timage: TwoTowar,\n\t\t\tname: 'Гамбургер',\n\t\t\tprice: 50,\n\t\t}, {\n\t\t\tid: 'bigmac',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Биг мак',\n\t\t\tprice: 200,\n\t\t}],\n\t}, {\n\t\tid: 'subway',\n\t\tname: 'SubWay',\n\t\tlink: '/place/pizikiva-gallery/subway',\n\t\timage: sub,\n\t\tdescription: 'Сеть ресторанов быстрого питания',\n\t\tfoods: [{\n\t\t\tid: 'melt-sub',\n\t\t\timage: ThreeTowar,\n\t\t\tname: 'Сабвей мелт',\n\t\t\tprice: 300,\n\t\t}, {\n\t\t\tid: 'day-sub',\n\t\t\timage: OneTowar,\n\t\t\tname: 'Саб дня',\n\t\t\tprice: 200,\n\t\t}],\n\t}],\n}];\n\nconst placesMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\tresult[item.link] = item;\n\t});\n\n\treturn result;\n}, {});\n\nconst foodsMap = FOOD_AREAS.reduce((result, area) => {\n\tarea.items.forEach(item => {\n\t\titem.foods.forEach(food => {\n\t\t\tresult[food.id] = food;\n\t\t});\n\t});\n\n\treturn result;\n}, {});\n\nconst App = () => {\n\tconst [ orderStatuses, setOrderStatuses ] = useState(JSON.parse((localStorage.getItem('orderStatuses') || 'null')) || {});\n\tconst [ order, setOrder ] = useState(JSON.parse((localStorage.getItem('orders') || 'null')) || {});\n\n\treturn (\n\t\t<Router>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact>\n\t\t\t\t\t<Home foodAreas={FOOD_AREAS} order={order} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path=\"/order/:areaId/:itemId\" exact>\n\t\t\t\t\t<Order\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route\n\t\t\t\t  exact\n\t\t\t\t  path=\"/basket/:areaId/:itemId\"\n\t\t\t\t  render={(routeProps) => {\n\t\t\t\t\tconst place = routeProps.match.params.itemId;\n\t\t\t\t\tconst placeFood = FOOD_AREAS[0].items.find(item => item.id === place);\n\t\t\t\t\tconst placeFoodValues = placeFood\n\t\t\t\t\t\t? placeFood.foods.map(food => food.id)\n\t\t\t\t\t\t: []\n\n\t\t\t\t\tconst isOrderPossible = Object.values(order).some(orderItem => {\n\t\t\t\t\t\treturn placeFoodValues.includes(orderItem.item.id)\n\t\t\t\t\t});\n\n\t\t\t\t\treturn isOrderPossible ? (\n\t\t\t\t\t\t<Basket\n\t\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Redirect to=\"/\" />\n\t\t\t\t\t)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<Route\n\t\t\t\t\tpath=\"/orders\"\n\t\t\t\t\texact\n\t\t\t\t>\n\t\t\t\t\t<Orders \n\t\t\t\t\t\torder={order}\n\t\t\t\t\t\torderStatuses={orderStatuses}\n\t\t\t\t\t\tfoodAreas={FOOD_AREAS}\n\t\t\t\t\t\tsetCanceledOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'CANCELED';\n\n\t\t\t\t\t\t\t// В задании говорилось про консоль, выведу на всякий случай\n\t\t\t\t\t\t\tconsole.log(nextStatuses);\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetFinishedOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'DONE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tsetActiveOrder={({ itemId }) => {\n\t\t\t\t\t\t\tconst nextStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\tnextStatuses[itemId] = 'ACTIVE';\n\n\t\t\t\t\t\t\tsetOrderStatuses(nextStatuses);\n\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextStatuses));\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Route>\n\t\t\t\t<Route \n\t\t\t\t\tpath=\"/place/:area/:place\"\n\t\t\t\t\trender={routeProps => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Place\n\t\t\t\t\t\t\t\t{...routeProps}\n\t\t\t\t\t\t\t\titem={placesMap[routeProps.location.pathname]}\n\t\t\t\t\t\t\t\tarea={FOOD_AREAS[0]}\n\t\t\t\t\t\t\t\torder={order}\n\t\t\t\t\t\t\t\tonIncrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count++;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tupdatedOrder[id] = {\n\t\t\t\t\t\t\t\t\t\t\titem: foodsMap[id],\n\t\t\t\t\t\t\t\t\t\t\tcount: 1,\n\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonDecrementPosition={({ id, itemId, areaId }) => {\n\t\t\t\t\t\t\t\t\tconst updatedOrder = {...order};\n\n\t\t\t\t\t\t\t\t\tif (id in updatedOrder) {\n\t\t\t\t\t\t\t\t\t\tif (updatedOrder[id].count === 1) {\n\t\t\t\t\t\t\t\t\t\t\tdelete updatedOrder[id];\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tupdatedOrder[id].count--;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tlet nextOrderStatuses = {...orderStatuses};\n\n\t\t\t\t\t\t\t\t\tif (Object.keys(nextOrderStatuses).length === 0) {\n\t\t\t\t\t\t\t\t\t\tFOOD_AREAS.forEach(area => {\n\t\t\t\t\t\t\t\t\t\t\tarea.items.forEach(item => {\n\t\t\t\t\t\t\t\t\t\t\t\titem.foods.forEach(food => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (food.id in order) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst status = item.id === itemId ? 'ACTIVE' : 'DONE';\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tnextOrderStatuses[item.id] = status;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tconst serialized = JSON.stringify(updatedOrder);\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orders', serialized);\n\t\t\t\t\t\t\t\t\tlocalStorage.setItem('orderStatuses', JSON.stringify(nextOrderStatuses));\n\n\t\t\t\t\t\t\t\t\tsetOrder(updatedOrder);\n\t\t\t\t\t\t\t\t\tsetOrderStatuses(nextOrderStatuses);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Switch>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/edit.751f84c2.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.dfc54362.png\";","module.exports = __webpack_public_path__ + \"static/media/3.dbf82c38.png\";","module.exports = __webpack_public_path__ + \"static/media/2.20489759.png\";","module.exports = __webpack_public_path__ + \"static/media/4.e671d539.png\";","module.exports = __webpack_public_path__ + \"static/media/check-symbol.06277842.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh-button.1198ed41.svg\";","module.exports = __webpack_public_path__ + \"static/media/kfc.4fd2ba47.png\";","module.exports = __webpack_public_path__ + \"static/media/burger.35bcd067.png\";","module.exports = __webpack_public_path__ + \"static/media/mcdac.60464810.png\";","module.exports = __webpack_public_path__ + \"static/media/sub.4eb05fdd.png\";"],"sourceRoot":""}